package pantallas;

import controlador.NotaController;
import entidades.Nota;
import entidades.Persona;
import entidades.Trimestre;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import utils.TextUtil;

/**
 *
 * @author Lucas
 */
public class FrmNota extends javax.swing.JFrame {

    private NotaController controller;
    private Persona persona;

    public FrmNota(NotaController controller) {
        this.controller = controller;
        initComponents();
        this.setLocationRelativeTo(null);
        txtIdNota.setVisible(false);
        DefaultTableModel dm = (DefaultTableModel) tblNotas.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(dm);
        tblNotas.setRowSorter(tr);
    }

    /**
     * Creates new form Notas
     */
    public FrmNota() {
        this(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAlumno = new javax.swing.JLabel();
        pnlAgregarNota = new javax.swing.JPanel();
        lblNota = new javax.swing.JLabel();
        txtNota = new javax.swing.JTextField();
        lblTrimestre = new javax.swing.JLabel();
        cmbTrimestres = new javax.swing.JComboBox<>();
        btnAceptar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        pnlNotas = new javax.swing.JPanel();
        spnlNotas = new javax.swing.JScrollPane();
        tblNotas = new javax.swing.JTable();
        txtIdNota = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Notas");
        setMinimumSize(new java.awt.Dimension(723, 490));

        lblAlumno.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblAlumno.setText("NOMBRE ALUMNO - ");

        lblNota.setText("Nota");

        txtNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNotaKeyTyped(evt);
            }
        });

        lblTrimestre.setText("Trimestre");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAgregarNotaLayout = new javax.swing.GroupLayout(pnlAgregarNota);
        pnlAgregarNota.setLayout(pnlAgregarNotaLayout);
        pnlAgregarNotaLayout.setHorizontalGroup(
            pnlAgregarNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAgregarNotaLayout.createSequentialGroup()
                .addGroup(pnlAgregarNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbTrimestres, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTrimestre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNota, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAgregarNotaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAceptar)))
                .addContainerGap())
        );
        pnlAgregarNotaLayout.setVerticalGroup(
            pnlAgregarNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAgregarNotaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNota)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTrimestre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbTrimestres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAceptar)
                .addContainerGap(340, Short.MAX_VALUE))
        );

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        pnlNotas.setMinimumSize(new java.awt.Dimension(723, 490));

        tblNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nota", "Trimestre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNotasMouseClicked(evt);
            }
        });
        spnlNotas.setViewportView(tblNotas);

        javax.swing.GroupLayout pnlNotasLayout = new javax.swing.GroupLayout(pnlNotas);
        pnlNotas.setLayout(pnlNotasLayout);
        pnlNotasLayout.setHorizontalGroup(
            pnlNotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNotasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spnlNotas, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlNotasLayout.setVerticalGroup(
            pnlNotasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spnlNotas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
        );

        txtIdNota.setEditable(false);
        txtIdNota.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlAgregarNota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlNotas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAlumno)
                            .addComponent(txtIdNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlumno)
                    .addComponent(btnVolver))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIdNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlAgregarNota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlNotas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        try {
            Long idNota = Long.parseLong(txtIdNota.getText());
            Float valor = Float.parseFloat(txtNota.getText());
            if(valor < 0 || valor > 10){
                return;
            }
            Trimestre trimestre = (Trimestre) cmbTrimestres.getSelectedItem();
            Nota nota = new Nota(idNota, valor, trimestre, persona);
            controller.insertOrUpdate(nota);
            actualizarTabla(nota);
            txtIdNota.setText("0");
        } catch (NumberFormatException e) {
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void txtNotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNotaKeyTyped
        if (!TextUtil.esNumero(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNotaKeyTyped

    private void tblNotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNotasMouseClicked
        if (evt.getClickCount() == 2) {
            int fila = tblNotas.getSelectedRow();
            txtIdNota.setText(tblNotas.getValueAt(fila, 0).toString());
            txtNota.setText(String.valueOf(tblNotas.getValueAt(fila, 1)));
            cmbTrimestres.setSelectedIndex(Trimestre.valueOf(tblNotas.getValueAt(fila, 2).toString().toUpperCase()).ordinal());
        }
    }//GEN-LAST:event_tblNotasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmNota().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<Trimestre> cmbTrimestres;
    private javax.swing.JLabel lblAlumno;
    private javax.swing.JLabel lblNota;
    private javax.swing.JLabel lblTrimestre;
    private javax.swing.JPanel pnlAgregarNota;
    private javax.swing.JPanel pnlNotas;
    private javax.swing.JScrollPane spnlNotas;
    private javax.swing.JTable tblNotas;
    private javax.swing.JTextField txtIdNota;
    private javax.swing.JTextField txtNota;
    // End of variables declaration//GEN-END:variables

    public void setTrimestres(List<Trimestre> trimestres) {
        cmbTrimestres.removeAllItems();
        trimestres.forEach(cmbTrimestres::addItem);
    }

    public void setController(NotaController controller) {
        this.controller = controller;
    }

    public void setPersona(Persona persona) {
        this.persona = persona;
        lblAlumno.setText(persona.toString());
        cargarNotas();
    }

    public void cargarNotas() {
        DefaultTableModel model = (DefaultTableModel) tblNotas.getModel();
        model.getDataVector().removeAllElements();
        persona.getNotas().forEach(nota -> {
            model.addRow(new Object[]{nota.getIdNota(), nota.getValor(), nota.getTrimestre()});
        });
    }

    private void actualizarTabla(Nota nota) {
        boolean encontrado = false;
        DefaultTableModel model = (DefaultTableModel) tblNotas.getModel();

        for (int i = 0; i < model.getRowCount(); i++) {
            if(model.getValueAt(i, 0).equals(nota.getIdNota())){
                model.setValueAt(nota.getValor(), i, 1);
                model.setValueAt(nota.getTrimestre(), i, 2);
                encontrado = true;
                break;
            }            
        }

        if (!encontrado) {
            model.addRow(new Object[]{nota.getIdNota(), nota.getValor(), nota.getTrimestre()});
        }
        
        tblNotas.repaint();
    }
}
